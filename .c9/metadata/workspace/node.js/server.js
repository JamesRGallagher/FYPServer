{"filter":false,"title":"server.js","tooltip":"/node.js/server.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":114,"column":21},"action":"remove","lines":["//quick git test","// server.js","var passport = require('passport');","//var authController = require('./controllers/auth');","// connect to our database","var mongoose = require('mongoose');","mongoose.connect('mongodb://james:password1@ds031741.mongolab.com:31741/testfyp');","var docs = require(\"express-mongoose-docs\");","","//Import our models","var User = require('./models/users');","var Request = require('./models/requests');","var express = require('express'); // call express","var bodyParser = require('body-parser');","var passport = require('passport');","var session  = require('express-session');","var cookieParser = require('cookie-parser');","","var app = express(); // define our app using express","app.use(function(req, res, next) {","  res.header(\"Access-Control-Allow-Origin\", \"*\");","  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");","  next();","});","","","// bodyParser will let us get the data from a POST","app.use(bodyParser.urlencoded({","    extended: true,","    limit: '90mb'","}));","app.use(bodyParser.json({limit: '90mb'}));","","","function checkForEligableUsers(req){","","   // console.log(\"checkForEligableUsers\" + lat","","}","","//Set the port","var port = process.env.PORT || 8080; // set our port","","//Get expresses router - this allows us to be restful","var router = express.Router(); ","","","//Every request will call this - it's useful for debugging/logging","router.use(function(req, res, next) {","    console.log(req.body);","    next(); // make sure we go to the next routes and don't stop here","});","","// test route - found at /api)","router.get('/', function(req, res) {","    ","    res.json({","        message: 'Api is running fine'","    });","});","","","","","","var responseController = require('./controllers/responseController');","","router.route('/response')","    .post(responseController.createResponse)","","router.route('/responses/:user_id')","    .get(responseController.getResponse)","","var userController = require('./controllers/userController');","","//The following happens at /api/users!","router.route('/register')","    .post(userController.createUser)","","","//The following happens at /api/users!","router.route('/users')","    .post(userController.createUser)","    .get(userController.getUsers);","    ","router.route('/auth')","    .post(userController.authUser)","    ","    ","//The following happens at /api/users/userid","router.route('/users/:user_id')","    .get(userController.getUser)","    .put(userController.updateUser)","    .post(userController.updateUserLocation)","    .delete(userController.deleteUser);","    ","","var requestController = require('./controllers/requestController');","//The following happens at /api/requests!","router.route('/requests')","    .post(requestController.createRequest)","    .get(requestController.getRequest);","","router.route('/requests/:user_id')",".get(requestController.getRequestUser);","","// REGISTER OUR ROUTES -------------------------------","// all of our routes will be prefixed with /api","app.use('/api', router);","","// START THE SERVER","// =============================================================================","app.listen(port);","console.log('The api is running on ' + port + ' :)');","docs(app, mongoose); "]},{"start":{"row":0,"column":0},"end":{"row":95,"column":21},"action":"insert","lines":["// connect to our database.","var mongoose = require('mongoose');","mongoose.connect('mongodb://james:password1@ds031741.mongolab.com:31741/testfyp');","","//To generate documentation.","var docs = require(\"express-mongoose-docs\");","","//We require express and related files.","var express = require('express'); ","var bodyParser = require('body-parser');","var session  = require('express-session');","var cookieParser = require('cookie-parser');","","//Import the models.","var User = require('./models/users');","var Request = require('./models/requests');","","//Initalise the express app as app, and enables CORS","var app = express(); // define our app using express","app.use(function(req, res, next) {","  res.header(\"Access-Control-Allow-Origin\", \"*\");","  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");","  next();","});","app.use(bodyParser.urlencoded({","    extended: true,","    limit: '90mb'","}));","app.use(bodyParser.json({limit: '90mb'}));","","//Set the port. If the enviorment is set use that, else 8080.","var port = process.env.PORT || 8080; // set our port","","//Set the router","var router = express.Router(); ","","//Ensure we go to the next routes and don't stop here","router.use(function(req, res, next) {","    next(); ","});","","//Test route - found at /api. Useful for a quick health check.","router.get('/', function(req, res) {","    res.json({","        message: 'Api is running fine'","    });","});","","","//Intialise the response controller and define routes.","var responseController = require('./controllers/responseController');","//On a post to /response call createResponse in the response controller.","router.route('/response')","    .post(responseController.createResponse)","//On a get to /response call with a users id call getResponse in the response controller.","router.route('/responses/:user_id')","    .get(responseController.getResponse)","","","//The following routes should be self explanitory given the explination above.","","var userController = require('./controllers/userController');","","router.route('/register')","    .post(userController.createUser)","","router.route('/users')","    .post(userController.createUser)","    .get(userController.getUsers);","    ","router.route('/auth')","    .post(userController.authUser)","","router.route('/users/:user_id')","    .get(userController.getUser)","    .put(userController.updateUser)","    .post(userController.updateUserLocation)","    .delete(userController.deleteUser);","    ","var requestController = require('./controllers/requestController');","","router.route('/requests')","    .post(requestController.createRequest)","    .get(requestController.getRequest);","","router.route('/requests/:user_id')","    .get(requestController.getRequestUser);","","// Prefix all routes with /api.","app.use('/api', router);","","//Start the server, and log out.","app.listen(port);","console.log('The api is running on ' + port + ' :)');","//Generate documentation.","docs(app, mongoose); "]}]}]]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":28,"column":33},"end":{"row":28,"column":33},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1426778769000,"hash":"331989cf5f94adf16aa4423bc0ae63c7cbf6f9f6"}