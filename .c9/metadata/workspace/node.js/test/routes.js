{"filter":false,"title":"routes.js","tooltip":"/node.js/test/routes.js","undoManager":{"mark":37,"position":37,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":71,"column":3},"action":"insert","lines":["var should = require('should'); ","var assert = require('assert');","var request = require('supertest');  ","var mongoose = require('mongoose');","var winston = require('winston');","var config = require('./config-debug');"," ","describe('Routing', function() {","  var url = 'http://someurl.com';","  // within before() you can run all the operations that are needed to setup your tests. In this case","  // I want to create a connection with the database, and when I'm done, I call done().","  before(function(done) {","    // In our tests we use the test db","    mongoose.connect(config.db.mongodb);\t\t\t\t\t\t\t","    done();","  });","  // use describe to give a title to your test suite, in this case the tile is \"Account\"","  // and then specify a function in which we are going to declare all the tests","  // we want to run. Each test starts with the function it() and as a first argument ","  // we have to provide a meaningful title for it, whereas as the second argument we","  // specify a function that takes a single parameter, \"done\", that we will use ","  // to specify when our test is completed, and that's what makes easy","  // to perform async test!","  describe('Account', function() {","    it('should return error trying to save duplicate username', function(done) {","      var profile = {","        username: 'vgheri',","        password: 'test',","        firstName: 'Valerio',","        lastName: 'Gheri'","      };","    // once we have specified the info we want to send to the server via POST verb,","    // we need to actually perform the action on the resource, in this case we want to ","    // POST on /api/profiles and we want to send some info","    // We do this using the request object, requiring supertest!","    request(url)","\t.post('/api/profiles')","\t.send(profile)","    // end handles the response","\t.end(function(err, res) {","          if (err) {","            throw err;","          }","          // this is should.js syntax, very clear","          res.should.have.status(400);","          done();","        });","    });","    it('should correctly update an existing account', function(done){","\tvar body = {","\t\tfirstName: 'JP',","\t\tlastName: 'Berd'","\t};","\trequest(url)","\t\t.put('/api/profiles/vgheri')","\t\t.send(body)","\t\t.expect('Content-Type', /json/)","\t\t.expect(200) //Status code","\t\t.end(function(err,res) {","\t\t\tif (err) {","\t\t\t\tthrow err;","\t\t\t}","\t\t\t// Should.js fluent syntax applied","\t\t\tres.body.should.have.property('_id');","\t                res.body.firstName.should.equal('JP');","\t                res.body.lastName.should.equal('Berd');                    ","\t                res.body.creationDate.should.not.equal(null);","\t\t\tdone();","\t\t});","\t});","  });","});"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"remove","lines":["    mongoose.connect(config.db.mongodb);\t\t\t\t\t\t\t",""]},{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["mongoose.connect('mongodb://james:password1@ds031741.mongolab.com:31741/testfyp');",""]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":13},"end":{"row":8,"column":31},"action":"remove","lines":["http://someurl.com"]},{"start":{"row":8,"column":13},"end":{"row":8,"column":55},"action":"insert","lines":["https://fypserver-jamesgallagher.c9.io/api"]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":12},"end":{"row":23,"column":19},"action":"remove","lines":["Account"]},{"start":{"row":23,"column":12},"end":{"row":23,"column":13},"action":"insert","lines":["U"]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":13},"end":{"row":23,"column":14},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":14},"end":{"row":23,"column":15},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":15},"end":{"row":23,"column":16},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":16},"end":{"row":23,"column":17},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":19},"end":{"row":26,"column":25},"action":"remove","lines":["vgheri"]},{"start":{"row":26,"column":19},"end":{"row":26,"column":20},"action":"insert","lines":["j"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":20},"end":{"row":26,"column":21},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":21},"end":{"row":26,"column":22},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":22},"end":{"row":26,"column":23},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":23},"end":{"row":26,"column":24},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":19},"end":{"row":27,"column":23},"action":"remove","lines":["test"]},{"start":{"row":27,"column":19},"end":{"row":27,"column":20},"action":"insert","lines":["j"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":20},"end":{"row":27,"column":21},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":21},"end":{"row":27,"column":22},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":22},"end":{"row":27,"column":23},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":23},"end":{"row":27,"column":24},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":7},"end":{"row":29,"column":25},"action":"remove","lines":[" firstName: 'Valerio',","        lastName: 'Gheri'"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":6},"end":{"row":28,"column":7},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":5},"end":{"row":28,"column":6},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":4},"end":{"row":28,"column":5},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":26},"end":{"row":28,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":25},"end":{"row":27,"column":26},"action":"remove","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":13},"end":{"row":34,"column":21},"action":"remove","lines":["profiles"]},{"start":{"row":34,"column":13},"end":{"row":34,"column":14},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":14},"end":{"row":34,"column":15},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":15},"end":{"row":34,"column":16},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":16},"end":{"row":34,"column":17},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":17},"end":{"row":34,"column":18},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":3},"end":{"row":66,"column":5},"action":"remove","lines":[" it('should correctly update an existing account', function(done){","\tvar body = {","\t\tfirstName: 'JP',","\t\tlastName: 'Berd'","\t};","\trequest(url)","\t\t.put('/api/profiles/vgheri')","\t\t.send(body)","\t\t.expect('Content-Type', /json/)","\t\t.expect(200) //Status code","\t\t.end(function(err,res) {","\t\t\tif (err) {","\t\t\t\tthrow err;","\t\t\t}","\t\t\t// Should.js fluent syntax applied","\t\t\tres.body.should.have.property('_id');","\t                res.body.firstName.should.equal('JP');","\t                res.body.lastName.should.equal('Berd');                    ","\t                res.body.creationDate.should.not.equal(null);","\t\t\tdone();","\t\t});"]}]}],[{"group":"doc","deltas":[{"start":{"row":47,"column":0},"end":{"row":47,"column":4},"action":"remove","lines":["\t});"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":3},"end":{"row":47,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":2},"end":{"row":46,"column":3},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":1},"end":{"row":46,"column":2},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":0},"end":{"row":46,"column":1},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":45,"column":7},"end":{"row":46,"column":0},"action":"remove","lines":["",""]}]}]]},"ace":{"folds":[],"scrolltop":280.5,"scrollleft":0,"selection":{"start":{"row":47,"column":3},"end":{"row":47,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":17,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1425605272117,"hash":"173f876ceaef3197fee8a70357d6487e00fa665f"}